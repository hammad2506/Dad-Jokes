{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Joke","this","props","votes","react_default","a","createElement","className","onClick","upvote","style","borderColor","getColor","downvote","text","getEmoji","Component","JokeList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","id","handleClick","bind","assertThisInitialized","length","getJokes","setState","st","toConsumableArray","sort","b","numJokesToGet","axios","get","headers","Accept","res","data","joke","newJoke","jokeId","has","console","log","push","add","concat","setItem","stringify","_this2","alert","_context","t0","delta","_this3","objectSpread","_this4","src","alt","src_Joke_0","key","handleVote","defaultProps","App","src_JokeList_0","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89631608.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Joke.css\";\n\nclass Joke extends Component {\n  getColor() {\n    if (this.props.votes >= 15) {\n      return \"#4CAF50\";\n    } else if (this.props.votes >= 12) {\n      return \"#8BC34A\";\n    } else if (this.props.votes >= 9) {\n      return \"#CDDC39\";\n    } else if (this.props.votes >= 6) {\n      return \"#FFEB3B\";\n    } else if (this.props.votes >= 3) {\n      return \"#FFC107\";\n    } else if (this.props.votes >= 0) {\n      return \"#FF9800\";\n    } else {\n      return \"#f44336\";\n    }\n  }\n  getEmoji() {\n    if (this.props.votes >= 15) {\n      return \"em em-rolling_on_the_floor_laughing\";\n    } else if (this.props.votes >= 12) {\n      return \"em em-laughing\";\n    } else if (this.props.votes >= 9) {\n      return \"em em-smiley\";\n    } else if (this.props.votes >= 6) {\n      return \"em em-slightly_smiling_face\";\n    } else if (this.props.votes >= 3) {\n      return \"em em-neutral_face\";\n    } else if (this.props.votes >= 0) {\n      return \"em em-confused\";\n    } else {\n      return \"em em-angry\";\n    }\n  }\n  render() {\n    return (\n      <div className='Joke'>\n        <div className='Joke-buttons'>\n          <i className='fas fa-arrow-up' onClick={this.props.upvote} />\n          <span className='Joke-votes' style={{ borderColor: this.getColor() }}>\n            {this.props.votes}\n          </span>\n          <i className='fas fa-arrow-down' onClick={this.props.downvote} />\n        </div>\n        <div className='Joke-text'>{this.props.text}</div>\n        <div className='Joke-smiley'>\n          <i className={this.getEmoji()} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Joke;\n","import React, { Component } from \"react\";\nimport Joke from \"./Joke\";\nimport axios from \"axios\";\nimport \"./JokeList.css\";\n\nclass JokeList extends Component {\n  static defaultProps = { numJokesToGet: 10 };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: JSON.parse(window.localStorage.getItem(\"jokes\") || \"[]\"),\n      loading: false\n    };\n    this.seenJokes = new Set(this.state.jokes.map(j => j.id));\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length === 0) this.getJokes();\n    else this.setState(st => ({ jokes: [...st.jokes].sort((a, b) => b.votes - a.votes) }));\n  }\n\n  async getJokes() {\n    try {\n      const jokes = [];\n      while (jokes.length < this.props.numJokesToGet) {\n        const res = await axios.get(\"https://icanhazdadjoke.com/\", { headers: { Accept: \"application/json\" } });\n        const [newJoke, jokeId] = [res.data.joke, res.data.joke];\n        if (!this.seenJokes.has(jokeId)) {\n          jokes.push({ id: jokeId, text: newJoke, votes: 0 });\n          this.seenJokes.add(jokeId);\n        } else {\n          console.log(\"Duplicate Joke: \" + newJoke);\n        }\n      }\n      this.setState(st => {\n        const sortedJokes = [...st.jokes, ...jokes].sort((a, b) => b.votes - a.votes);\n        return { loading: false,  jokes: sortedJokes };\n      }, () => window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes)));\n    } catch (e) {\n      alert(e);\n      this.setState({ loading: false });\n    }\n  }\n\n  handleVote(id, delta) {\n    this.setState(st => ({\n        jokes: st.jokes.map(j => j.id === id ? { ...j, votes: j.votes + delta } : j)\n      }), () => window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes)));\n  }\n\n  handleClick() {\n    this.setState({ loading: true }, this.getJokes);\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className='JokeList-spinner'>\n          <i className='far fa-8x fa-laugh fa-spin' />\n          <h1 className='JokeList-title'>Loading...</h1>\n        </div>\n      );\n    }\n    return (\n      <div className='JokeList'>\n        <div className='JokeList-sidebar'>\n          <h1 className='JokeList-title'>\n            <span>Dad</span> Jokes\n          </h1>\n          <img src='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg' alt=\"Smiley Face pic\"/>\n          <button className='JokeList-getmore' onClick={this.handleClick}>\n            Fetch Jokes\n          </button>\n        </div>\n\n        <div className='JokeList-jokes'>\n          {this.state.jokes.map(j => (\n            <Joke\n              key={j.id}\n              votes={j.votes}\n              text={j.text}\n              upvote={() => this.handleVote(j.id, 1)}\n              downvote={() => this.handleVote(j.id, -1)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default JokeList;\n","import React, { Component } from \"react\";\nimport JokeList from \"./JokeList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <JokeList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}